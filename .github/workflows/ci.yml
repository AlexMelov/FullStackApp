name: ci

on: [ push, pull_request ]

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Set up Node 14
                uses: actions/setup-node@v1
                with:
                    node-version: 14
            -   run: npm install --prefix ./backend/
            -   run: npm run lint --prefix ./backend/
            -   run: npm install --prefix ./frontend/
            -   run: npm run lint --prefix ./frontend/
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Set up Node 14
                uses: actions/setup-node@v1
                with:
                    node-version: 14
            -   run: npm install --prefix ./backend/
            -   run: npm run build --prefix ./backend/
            -   run: npm install --prefix ./frontend/
            -   run: npm run build --prefix ./frontend/
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 14 ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Set up Node ${{ matrix.node-version }}
                uses: actions/setup-node@v1
                with:
                    node-version: ${{ matrix.node-version }}
            -   run: npm install --prefix ./frontend/
            -   run: npm run test --prefix ./frontend/
    test-acceptance:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 14 ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Set up Node ${{ matrix.node-version }}
                uses: actions/setup-node@v1
                with:
                    node-version: ${{ matrix.node-version }}
            -   run: npm install --prefix ./frontend/
            -   run: npm install --prefix ./backend/
            -   run: npm run start:dev --prefix ./backend &
            -   run: npm run start:dev --prefix ./frontend &
            -   run: npm run wait-for-serve --prefix ./frontend && npm run e2e --prefix ./frontend
                env:
                    DB_URL: ${{ secrets.DB_URL }}

    my-job:
        runs-on: ubuntu-latest
         timeout-minutes: 30
